OK!
Create heap files (Make sure the Binary Files folder is empty)? y for yes, n for no: 
p_type
p_brand
p_mfgr
p_name
before:
(p_partkey:INTEGER [200000], p_name:STRING [199996], p_mfgr:STRING [5], p_brand:STRING [25], p_type:STRING [150], p_size:INTEGER [50], p_container:STRING [40], p_retailprice:FLOAT [20899], p_comment:STRING [131753])
after:
(p_name:STRING [199996], p_mfgr:STRING [5], p_brand:STRING [25], p_type:STRING [150])
(p_name:STRING [199996], p_mfgr:STRING [5], p_brand:STRING [25], p_type:STRING [150])
QUERY EXECUTION TREE(
OUTPUT
Schema: (p_name:STRING [199996], p_mfgr:STRING [5], p_brand:STRING [25], p_type:STRING [150])
Out File: output.txt
Producer:
{
PROJECT: 
Schema In: (p_partkey:INTEGER [200000], p_name:STRING [199996], p_mfgr:STRING [5], p_brand:STRING [25], p_type:STRING [150], p_size:INTEGER [50], p_container:STRING [40], p_retailprice:FLOAT [20899], p_comment:STRING [131753])
Schema Out: (p_name:STRING [199996], p_mfgr:STRING [5], p_brand:STRING [25], p_type:STRING [150])
# Attributes Input: 9
# Attributes Output: 4
Keep: 1 2 3 4 
Producer: SELECT
Schema: (p_partkey:INTEGER [200000], p_name:STRING [199996], p_mfgr:STRING [5], p_brand:STRING [25], p_type:STRING [150], p_size:INTEGER [50], p_container:STRING [40], p_retailprice:FLOAT [20899], p_comment:STRING [131753])
Predicate: (Left[5] > Const (Integer)) AND (Left[5] < Const (Integer)) AND (Left[7] > Const (Float)) AND (Left[7] < Const (Float))
Producer: SCAN
Schema:(p_partkey:INTEGER [200000], p_name:STRING [199996], p_mfgr:STRING [5], p_brand:STRING [25], p_type:STRING [150], p_size:INTEGER [50], p_container:STRING [40], p_retailprice:FLOAT [20899], p_comment:STRING [131753])
File


}

)
